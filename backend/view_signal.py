from machine import Pin
from UpyIrRx import UpyIrRx
from UpyIrTx import UpyIrTx
# 赤外線受信のためのピンを指定
rx_pin = Pin(14, Pin.IN)  # 例としてGPIO14を使用
# UpyIrRxクラスのインスタンスを作成
rx = UpyIrRx(rx_pin)

tx_pin = Pin(21, Pin.OUT)  # Pin No.26
tx = UpyIrTx(0,tx_pin)
# 3000ミリ秒以内に赤外線信号を受信
print("recording")
error_code = rx.record(1000)
signal_list =[401, 631, 402, 403, 401, 402, 403, 398, 453, 408, 461, 25191, 3498, 1718, 455, 1283, 455, 406, 463, 406, 463, 406, 463, 1285, 452, 416, 453, 414, 455, 415, 454, 415, 459, 1282, 455, 404, 465, 1283, 455, 1285, 453, 413, 456, 1285, 453, 1285, 453, 1285, 453, 1287, 455, 1283, 455, 411, 458, 411, 458, 1283, 455, 410, 459, 410, 459, 409, 460, 409, 460, 415, 454, 415, 454, 415, 454, 414, 455, 414, 460, 406, 463, 1282, 456, 413, 456, 412, 457, 412, 456, 412, 457, 412, 457, 412, 457, 411, 458, 411, 458, 411, 458, 410, 459, 412, 457, 412, 461, 409, 460, 409, 460, 409, 460, 409, 460, 408, 461, 410, 459, 409, 460, 409, 460, 410, 459, 410, 459, 411, 458, 416, 453, 411, 458, 416, 453, 422, 442, 422, 457, 407, 462, 408, 460, 414, 455, 420, 444, 419, 455, 419, 445, 419, 455, 419, 445, 421, 453, 418, 446, 421, 453, 417, 447, 422, 452, 417, 447, 422, 452, 417, 457, 415, 448, 419, 456, 414, 449, 419, 456, 414, 449, 420, 455, 414, 455, 415, 454, 416, 453, 415, 454, 416, 452, 418, 446, 421, 453, 416, 453, 418, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 415, 454, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 457, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 417, 456, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 415, 454, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 417, 457, 413, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 415, 454, 417, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 1285, 453, 1287, 455, 414, 455, 414, 455, 1283, 455, 414, 455, 414, 455, 414, 455, 34750, 3498, 1718, 455, 1283, 455, 414, 455, 415, 454, 416, 453, 1285, 453, 416, 453, 416, 453, 416, 453, 416, 453, 1287, 455, 414, 455, 1283, 455, 1283, 455, 414, 455, 1285, 453, 1285, 453, 1285, 453, 1285, 457, 1283, 455, 414, 455, 414, 455, 1283, 455, 414, 455, 414, 455, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 417, 456, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 410, 459, 416, 453, 416, 453, 1285, 453, 416, 453, 416, 453, 1287, 455, 414, 455, 414, 455, 1283, 455, 414, 455, 1285, 453, 416, 453, 1285, 453, 416, 453, 416, 453, 416, 453, 417, 456, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 1285, 453, 1285, 453, 1285, 453, 1285, 453, 1287, 455, 414, 455, 1283, 455, 414, 455, 414, 455, 414, 455, 415, 454, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 417, 456, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 1284, 454, 1285, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 457, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 1283, 455, 1284, 454, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 417, 456, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 414, 455, 415, 454, 410, 459, 416, 453, 416, 453, 1285, 453, 416, 453, 416, 457, 414, 455, 414, 455, 414, 455, 1284, 454, 1283, 455, 414, 455, 415, 454, 416, 453, 416, 453, 416, 453, 416, 453, 416, 453, 1285, 453, 412, 461, 414, 455, 414, 456, 413, 456, 413, 456, 413, 456, 413, 456, 414, 455, 414, 455, 1284, 454, 414, 455, 1285, 453, 416, 453, 416, 453, 416, 453, 1285, 457]

# 記録が正常に完了したか確認
if rx.get_mode() == rx.MODE_DONE_OK:
    # 記録されたバイト列を取得
    signal_data = rx.get_calibrate_list()
    
    # バイト列を整数のリストに変換
    signal_list = signal_data
    print("取得成功")
    print("信号リスト:", signal_list)
else:
    print("取得失敗: エラーコード", error_code)
    
if signal_list:
    tx.send(signal_list)